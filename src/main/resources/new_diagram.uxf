<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=12
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>312</x>
      <y>1336</y>
      <w>168</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumuration&gt;&gt;
uk.ac.rhul.acs2800::Symbols
{A list of non number tokens 
possible in an expression}
--
_DIVIDE_
_INVALID_
_LEFT_BRACKET_
_RIGHT_BRACKET_
_MINUS_
_PLUS_
_TIMES_
_DIVIDE_
_STANDARD_MINUS_
_STANDARD_DIVIDE_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>1408</y>
      <w>168</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumuration&gt;&gt;
uk.ac.rhul.cs2800::Type
{A list of types of values that an 
Entry can represent}
--
_INVALID_
_NUMBER_
_STRING_
_SYMBOL_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>1264</y>
      <w>208</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>
_uk.ac.rhul.cs2800::Entry_
Values stored in stack
--
**Attributes**
-number : float
-other     : Symbol
-type       : Type
-str          : str
-
**Responsibilities**
&lt;&lt;constructor&gt;&gt; +Entry(float value)
&lt;&lt;constructor&gt;&gt; +Entry(Symbols which)
&lt;&lt;constructor&gt;&gt; +Entry(String str)
+getString() : String
  {Exception = Badtype}
+getSymbol :Symbols
   {Exception = Badtype}
+getValue    : float 
   {Exception = Badtype}
+getType     : Type

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>1280</y>
      <w>152</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
fg=BLACK
bg=TRANSPARENT</panel_attributes>
    <additional_attributes>170.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>696</x>
      <y>1280</y>
      <w>160</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;180.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>456</x>
      <y>944</y>
      <w>280</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>_uk.ac.rhul.cs2800::Stack_
A stack that will hold all the value of Entry Class
--
*Attributes*
-myStack : List&lt;Entry&gt;
-int size
-
Responsibilities
&lt;&lt;constructor&gt;&gt;+Stack()
+getelement(int index)
   return the Entry of an index
+getSize()
     Returns how many Entry are in the stack
+pop() {Exception = StackEmptyException}
      returns and removes the first element of the stack
+push(Entry i)
      Insert an Entry on the top of the stack
+top() {Exception = StackEmptyException}
    Returns but keep the top value</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>592</x>
      <y>1176</y>
      <w>24</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=BLACK</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>304</x>
      <y>680</y>
      <w>208</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>_uk.ac.rhul.cs2800::NumStack_
The shunting uses numeric values
So,we provided a facade
hide the details.
--
*Attributes*
-numberStack : Stack
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; NumStack()
+getStackSize : int
+isEmpty : boolean
+pop()      : float
+push(floats value): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>968</x>
      <y>704</y>
      <w>288</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>_uk.ac.rhul.cs2800::StrStack_
The shunting algorithm needs a reversed expression to 
calculate left to right. So, we provided a facade to
hide the details.
--
*Attributes*
-myStrStack : Stack
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; StrStack()
+getStrStackSize : int
+isEmpty : boolean
+pop()      : String
+push(String element): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>720</x>
      <y>664</y>
      <w>208</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>_uk.ac.rhul.cs2800::OpStack_
The shunting uses a list of Symbols
So,we provided a facade
hide the details.
--
*Attributes*
-myOpStack : Stack
--
*Responsibilities*
&lt;&lt;constructor&gt;&gt; myOpStack()
+getStackSize : int
+isEmpty : boolean
+pop()      : Symbols
+push(Symbols operator): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>840</y>
      <w>136</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=BLACK</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>728</x>
      <y>872</y>
      <w>256</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=BLACK</panel_attributes>
    <additional_attributes>300.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>432</x>
      <y>864</y>
      <w>72</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=BLACK</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>776</y>
      <w>192</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>&lt;&lt;iterface&gt;&gt;
_uk.ac.rhul.cs2800::Calculator_
String
-
Responsibilities
+evaluate(String what): float
         {Exception = InvalidException}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>360</x>
      <y>384</y>
      <w>216</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>_uk.ac.rhul.cs2800::RevPolishCalc_
Evaluate Reverse Polish from String
Expression. 
-
-values : NumStack()
-
Responsibilities
&lt;&lt;constructor&gt;&gt; RevpolishCalc()
+evaluate(String what): float
         {Exception = InvalidException}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>616</x>
      <y>384</y>
      <w>216</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>_uk.ac.rhul.cs2800::StandardCalc_
Evaluate Infix from String expression
Expression. 
-
-values : OpStack()
-rpCalc : RevPolishCalc()
-resultStack : StrStack()
-
Responsibilities
&lt;&lt;constructor&gt;&gt; Standardcalc()
+evaluate(String what): float
         {Exception = InvalidException}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>520</y>
      <w>64</w>
      <h>272</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>60.0;320.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>528</y>
      <w>48</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;310.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>176</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;model&gt;&gt;
_uk.ac.rhul.cs2800::CalcModel_
Evaluate Infix from String expression
Expression. 
-
- standard : StandardCalc()
-revpolish : RevPolishCalc()

-
Responsibilities
&lt;&lt;constructor&gt;&gt; CalcModel()
+evaluate(String exprsn, boolean infix): float
         {Exception = InvalidException}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>592</x>
      <y>320</y>
      <w>144</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=BLACK</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>496</x>
      <y>320</y>
      <w>32</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=BLACK</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>232</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>&lt;&lt;controller&gt;&gt;
uk.ac.rhul.cs2800: CalcController
Adds itself as an observer to view
so that changes can be observed.
--
*Attributes*
-model : CalcModel
-view : CalcView
-infix : boolean
--
Responsibilities
+calculate()
     is notified when calculation is required
+expressionType()
     Is notified when a change of
     expression type is indicated</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>32</x>
      <y>272</y>
      <w>264</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
uk.ac.rhul.cs2800::ViewInterFace
-
Responsibilities
+getExpression():String
+setAnswer(String str): void
+addCalcObserver(Runnable f): void
+addTypeObserver(Consumer&lt;OPType&gt;): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>496</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;view&gt;&gt;
uk,ac,rhul.cs::GuiView
--
A graphical view with
1. A text field for expression
2. A text field for answer
3. One pair of radio button for mode
4. A button for calculate
--

-expression : String
-answer : String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>112</x>
      <y>376</y>
      <w>72</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>104</x>
      <y>200</y>
      <w>104</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>110.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>392</x>
      <y>520</y>
      <w>56</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=BLACK</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>528</y>
      <w>128</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=BLACK</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>224</x>
      <y>184</y>
      <w>272</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>320.0;90.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
